import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import F

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–æ—Ç—Ä–∏–º–∞–π—Ç–µ —É @BotFather)
import os

BOT_TOKEN = os.getenv("BOT_TOKEN", "YOUR_BOT_TOKEN_HERE")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–ª–æ–≤–Ω–∏–∫ –∑ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞–º–∏ (–Ω–æ–º–µ—Ä: –¥–∞–Ω—ñ)
EQUIPMENT = {
    "1": {
        "name": "–ë—ñ–≥–æ–≤–∏–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä",
        "description": "–ö–∞—Ä–¥—ñ–æ —Ç—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –≤–∏—Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ —Ç–∞ —Å–ø–∞–ª—é–≤–∞–Ω–Ω—è –∫–∞–ª–æ—Ä—ñ–π. –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä–æ–∑–º–∏–Ω–∫–∏ —Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è.",
        "video": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –≤—ñ–¥–µ–æ
    },
    "2": {
        "name": "–ñ–∏–º –ª–µ–∂–∞—á–∏",
        "description": "–ë–∞–∑–æ–≤–∞ –≤–ø—Ä–∞–≤–∞ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –≥—Ä—É–¥–Ω–∏—Ö –º'—è–∑—ñ–≤, –ø–µ—Ä–µ–¥–Ω—ñ—Ö –¥–µ–ª—å—Ç —Ç–∞ —Ç—Ä–∏—Ü–µ–ø—Å—ñ–≤. –í–∞–∂–ª–∏–≤–æ –¥–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ç–µ—Ö–Ω—ñ–∫–∏.",
        "video": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –≤—ñ–¥–µ–æ
    },
    "3": {
        "name": "–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –≤ –°–º—ñ—Ç—ñ",
        "description": "–ë–µ–∑–ø–µ—á–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –ø—Ä–∏—Å—ñ–¥–∞–Ω—å –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –Ω—ñ–≥ —Ç–∞ —Å—ñ–¥–Ω–∏—Ü—å. –¢—Ä–µ–Ω–∞–∂–µ—Ä –∑–∞–±–µ–∑–ø–µ—á—É—î —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å —Ä—É—Ö—É.",
        "video": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –≤—ñ–¥–µ–æ
    },
    "4": {
        "name": "–¢—è–≥–∞ –≤–µ—Ä—Ö–Ω—å–æ–≥–æ –±–ª–æ–∫—É",
        "description": "–í–ø—Ä–∞–≤–∞ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É —à–∏—Ä–æ—á–∞–π—à–∏—Ö –º'—è–∑—ñ–≤ —Å–ø–∏–Ω–∏. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –ø—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è–º –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤.",
        "video": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –≤—ñ–¥–µ–æ
    },
    "5": {
        "name": "–í–µ–ª–æ—Ç—Ä–µ–Ω–∞–∂–µ—Ä",
        "description": "–ö–∞—Ä–¥—ñ–æ —Ç—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è –∑–º—ñ—Ü–Ω–µ–Ω–Ω—è –Ω—ñ–≥ —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏. –ú'—è–∫–∏–π –≤–ø–ª–∏–≤ –Ω–∞ —Å—É–≥–ª–æ–±–∏.",
        "video": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –≤—ñ–¥–µ–æ
    }
}

# –°–ª–æ–≤–Ω–∏–∫ –∑ —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏
TRAINERS = {
    "–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–µ–Ω–∫–æ": {
        "platform": "Telegram",
        "link": "https://t.me/trainer_alex",
        "message": "–ü—Ä–∏–≤—ñ—Ç, —Ö–æ—á—É –∑–∞–π–º–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –ö–æ–ª–∏ —É –≤–∞—Å —î –≤—ñ–ª—å–Ω–µ –º—ñ—Å—Ü–µ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?"
    },
    "–ú–∞—Ä—ñ—è –Ü–≤–∞–Ω–µ–Ω–∫–æ": {
        "platform": "Instagram", 
        "link": "https://instagram.com/maria_trainer",
        "message": "–ü—Ä–∏–≤—ñ—Ç, —Ö–æ—á—É –∑–∞–π–º–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –ö–æ–ª–∏ —É –≤–∞—Å —î –≤—ñ–ª—å–Ω–µ –º—ñ—Å—Ü–µ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?"
    },
    "–î–º–∏—Ç—Ä–æ –ö–æ–≤–∞–ª–µ–Ω–∫–æ": {
        "platform": "WhatsApp",
        "link": "https://wa.me/380501234567",
        "message": "–ü—Ä–∏–≤—ñ—Ç, —Ö–æ—á—É –∑–∞–π–º–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –ö–æ–ª–∏ —É –≤–∞—Å —î –≤—ñ–ª—å–Ω–µ –º—ñ—Å—Ü–µ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?"
    },
    "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–µ–Ω–∫–æ": {
        "platform": "Telegram",
        "link": "https://t.me/anna_fitness",
        "message": "–ü—Ä–∏–≤—ñ—Ç, —Ö–æ—á—É –∑–∞–π–º–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –ö–æ–ª–∏ —É –≤–∞—Å —î –≤—ñ–ª—å–Ω–µ –º—ñ—Å—Ü–µ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?"
    }
}

@dp.message(CommandStart())
async def start_command(message: types.Message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    welcome_text = (
        "üèãÔ∏è‚Äç‚ôÇÔ∏è –í—ñ—Ç–∞—î–º–æ –≤ –Ω–∞—à–æ–º—É —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –∑–∞–ª—ñ!\n\n"
        "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n"
        "‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –≤–ø—Ä–∞–≤–∏ –Ω–∞ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞—Ö\n"
        "‚Ä¢ –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–º —Ç—Ä–µ–Ω–µ—Ä–æ–º\n\n"
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó üëá"
    )
    
    await message.answer(welcome_text)

@dp.message(F.text)
async def handle_equipment_number(message: types.Message):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞"""
    equipment_number = message.text.strip()
    
    if equipment_number in EQUIPMENT:
        equipment = EQUIPMENT[equipment_number]
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = InlineKeyboardBuilder()
        keyboard.add(InlineKeyboardButton(
            text="üìπ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—ñ–¥–µ–æ",
            url=equipment["video"]
        ))
        keyboard.add(InlineKeyboardButton(
            text="üë®‚Äçüíº –ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –¥–æ —Ç—Ä–µ–Ω–µ—Ä–∞",
            callback_data="book_trainer"
        ))
        keyboard.add(InlineKeyboardButton(
            text="üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è",
            callback_data="back_to_start"
        ))
        keyboard.adjust(1)  # –ü–æ –æ–¥–Ω—ñ–π –∫–Ω–æ–ø—Ü—ñ –≤ —Ä—è–¥–∫—É
        
        response_text = (
            f"üèãÔ∏è‚Äç‚ôÇÔ∏è **{equipment['name']}**\n\n"
            f"üìù {equipment['description']}\n\n"
            f"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—ñ–¥–µ–æ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—é —Ç–µ—Ö–Ω—ñ–∫–æ—é –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:"
        )
        
        await message.answer(
            response_text,
            reply_markup=keyboard.as_markup(),
            parse_mode="Markdown"
        )
    else:
        await message.answer(
            "‚ùå –¢—Ä–µ–Ω–∞–∂–µ—Ä –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.\n"
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —â–µ —Ä–∞–∑.\n\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ñ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∏: {', '.join(EQUIPMENT.keys())}"
        )

@dp.callback_query(F.data == "back_to_start")
async def back_to_start(callback: types.CallbackQuery):
    """–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ—á–∞—Ç–∫—É"""
    await callback.message.edit_text(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó üëá"
    )
    await callback.answer()

@dp.callback_query(F.data == "book_trainer")
async def show_trainers(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤"""
    keyboard = InlineKeyboardBuilder()
    
    for trainer_name, trainer_info in TRAINERS.items():
        keyboard.add(InlineKeyboardButton(
            text=f"{trainer_name} ({trainer_info['platform']})",
            callback_data=f"trainer_{trainer_name}"
        ))
    
    keyboard.add(InlineKeyboardButton(
        text="üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è",
        callback_data="back_to_start"
    ))
    keyboard.adjust(1)  # –ü–æ –æ–¥–Ω—ñ–π –∫–Ω–æ–ø—Ü—ñ –≤ —Ä—è–¥–∫—É
    
    await callback.message.edit_text(
        "üë®‚Äçüíº **–û–±–µ—Ä—ñ—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞:**\n\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —ñ–º'—è —Ç—Ä–µ–Ω–µ—Ä–∞, —â–æ–± –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∏–º:",
        reply_markup=keyboard.as_markup(),
        parse_mode="Markdown"
    )
    await callback.answer()

@dp.callback_query(F.data.startswith("trainer_"))
async def contact_trainer(callback: types.CallbackQuery):
    """–ö–æ–Ω—Ç–∞–∫—Ç –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º"""
    trainer_name = callback.data.replace("trainer_", "")
    
    if trainer_name in TRAINERS:
        trainer = TRAINERS[trainer_name]
        
        keyboard = InlineKeyboardBuilder()
        keyboard.add(InlineKeyboardButton(
            text=f"üí¨ –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ {trainer['platform']}",
            url=trainer['link']
        ))
        keyboard.add(InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –¥–æ —Ç—Ä–µ–Ω–µ—Ä—ñ–≤",
            callback_data="book_trainer"
        ))
        keyboard.adjust(1)
        
        message_text = (
            f"üë®‚Äçüíº **{trainer_name}**\n\n"
            f"üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {trainer['platform']}\n\n"
            f"üí¨ **–ì–æ—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è:**\n"
            f"`{trainer['message']}`\n\n"
            f"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ {trainer['platform']} "
            f"—Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—Ä–µ–Ω–µ—Ä—É:"
        )
        
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard.as_markup(),
            parse_mode="Markdown"
        )
    
    await callback.answer()

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
